// <auto-generated />
using System;
using ManagerApartment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagerApartment.Migrations
{
    [DbContext(typeof(ManagerApartmentContext))]
    [Migration("20231028105506_UpdateDB_1028_01")]
    partial class UpdateDB_1028_01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManagerApartment.Models.AddOn", b =>
                {
                    b.Property<int>("AddOnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AddOnID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddOnId"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AddOnId")
                        .HasName("PK__AddOn__682701A4C645370B");

                    b.HasIndex("RequestId");

                    b.HasIndex("ServiceId");

                    b.ToTable("AddOn", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Apartment", b =>
                {
                    b.Property<int>("ApartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentId"));

                    b.Property<string>("ApartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ApartmentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentTypeID");

                    b.Property<int?>("BuildingId")
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    b.Property<int?>("ContractNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("OwnerID");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("ApartmentId")
                        .HasName("PK__Apartmen__CBDF5744EA80DBF6");

                    b.HasIndex("ApartmentTypeId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Apartment", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.ApartmentType", b =>
                {
                    b.Property<int>("ApartmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApartmentTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentTypeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ApartmentTypeId")
                        .HasName("PK__Apartmen__8BA7C03291493104");

                    b.ToTable("ApartmentType", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentID");

                    b.Property<int?>("AssetHistoryId")
                        .HasColumnType("int")
                        .HasColumnName("AssetHistoryID");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ItemImage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AssetId")
                        .HasName("PK__Asset__4349237265B2A50D");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("AssetHistoryId");

                    b.ToTable("Asset", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.AssetHistory", b =>
                {
                    b.Property<int>("AssetHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssetHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetHistoryId"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ItemImage")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AssetHistoryId")
                        .HasName("PK__AssetHis__5681DDEDE33267A7");

                    b.ToTable("AssetHistory", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BillID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("BillId")
                        .HasName("PK__Bill__11F2FC4A06CE2AC5");

                    b.HasIndex("RequestId");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BuildingId")
                        .HasName("PK__Building__5463CDE4564BE5EA");

                    b.ToTable("Building", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentID");

                    b.Property<int?>("ContractDetailId")
                        .HasColumnType("int")
                        .HasColumnName("ContractDetailID");

                    b.Property<string>("ContractImage")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContractStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("ContractId")
                        .HasName("PK__Contract__C90D34095C8941B3");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("ContractDetailId");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.ContractDetail", b =>
                {
                    b.Property<int>("ContractDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractDetailId"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ContractDetailId")
                        .HasName("PK__Contract__CCA7AF0219FDBE4A");

                    b.ToTable("ContractDetail", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OwnerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AvatarLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("OwnerId")
                        .HasName("PK__Owner__819385989B402EBE");

                    b.ToTable("Owner", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PackageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<int?>("ApartmentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentTypeID");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PackageImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("PackageId")
                        .HasName("PK__Package__322035EC4829DB79");

                    b.HasIndex("ApartmentTypeId");

                    b.ToTable("Package", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.PackageServiceDetail", b =>
                {
                    b.Property<int>("PackSerDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PackSerDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackSerDetailId"));

                    b.Property<int?>("PackageId")
                        .HasColumnType("int")
                        .HasColumnName("PackageID");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.HasKey("PackSerDetailId")
                        .HasName("PK__PackageS__EF0F62DB4C1EC5A8");

                    b.HasIndex("PackageId");

                    b.HasIndex("ServiceId");

                    b.ToTable("PackageServiceDetail", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentID");

                    b.Property<DateTime?>("BookDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsSequence")
                        .HasColumnType("bit");

                    b.Property<int>("PackageId")
                        .HasColumnType("int")
                        .HasColumnName("PackageID");

                    b.Property<string>("ReqStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("RequestId")
                        .HasName("PK__Request__33A8519A783C169C");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("PackageId");

                    b.ToTable("Request", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.RequestLog", b =>
                {
                    b.Property<int>("RequestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestLogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestLogId"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MaintainItem")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RequestLogId")
                        .HasName("PK__RequestL__A2706F5E25904CEC");

                    b.HasIndex("RequestId");

                    b.HasIndex("StaffId");

                    b.ToTable("RequestLog", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ServiceStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Unit")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ServiceId")
                        .HasName("PK__Service__C51BB0EA10851A59");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AvatarLink")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StaffStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StaffId")
                        .HasName("PK__Staff__96D4AAF714D24248");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("ManagerApartment.Models.StaffDetail", b =>
                {
                    b.Property<int>("StaffDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffDetailId"));

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.HasKey("StaffDetailId")
                        .HasName("PK__StaffDet__56818E83A25BAA6D");

                    b.HasIndex("ServiceId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffDetail", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Tennant", b =>
                {
                    b.Property<int>("TennantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TennantID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TennantId"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AvatarLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ContractDetailId")
                        .HasColumnType("int")
                        .HasColumnName("ContractDetailID");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TennantId")
                        .HasName("PK__Tennant__901A3DC786213888");

                    b.HasIndex("ContractDetailId");

                    b.ToTable("Tennant", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.AddOn", b =>
                {
                    b.HasOne("ManagerApartment.Models.Request", "Request")
                        .WithMany("AddOns")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__AddOn__RequestID__6FE99F9F");

                    b.HasOne("ManagerApartment.Models.Service", "Service")
                        .WithMany("AddOns")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__AddOn__ServiceID__70DDC3D8");

                    b.Navigation("Request");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("ManagerApartment.Models.Apartment", b =>
                {
                    b.HasOne("ManagerApartment.Models.ApartmentType", "ApartmentType")
                        .WithMany("Apartments")
                        .HasForeignKey("ApartmentTypeId")
                        .HasConstraintName("FK__Apartment__Apart__403A8C7D");

                    b.HasOne("ManagerApartment.Models.Building", "Building")
                        .WithMany("Apartments")
                        .HasForeignKey("BuildingId")
                        .HasConstraintName("FK__Apartment__Build__412EB0B6");

                    b.HasOne("ManagerApartment.Models.Owner", "Owner")
                        .WithMany("Apartments")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK__Apartment__Owner__4222D4EF");

                    b.Navigation("ApartmentType");

                    b.Navigation("Building");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ManagerApartment.Models.Asset", b =>
                {
                    b.HasOne("ManagerApartment.Models.Apartment", "Apartment")
                        .WithMany("Assets")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK__Asset__Apartment__4E88ABD4");

                    b.HasOne("ManagerApartment.Models.AssetHistory", "AssetHistory")
                        .WithMany("Assets")
                        .HasForeignKey("AssetHistoryId")
                        .HasConstraintName("FK__Asset__AssetHist__4D94879B");

                    b.Navigation("Apartment");

                    b.Navigation("AssetHistory");
                });

            modelBuilder.Entity("ManagerApartment.Models.Bill", b =>
                {
                    b.HasOne("ManagerApartment.Models.Request", "Request")
                        .WithMany("Bills")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__Bill__RequestID__656C112C");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ManagerApartment.Models.Contract", b =>
                {
                    b.HasOne("ManagerApartment.Models.Apartment", "Apartment")
                        .WithMany("Contracts")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK__Contract__Apartm__49C3F6B7");

                    b.HasOne("ManagerApartment.Models.ContractDetail", "ContractDetail")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractDetailId")
                        .HasConstraintName("FK__Contract__Contra__4AB81AF0");

                    b.Navigation("Apartment");

                    b.Navigation("ContractDetail");
                });

            modelBuilder.Entity("ManagerApartment.Models.Package", b =>
                {
                    b.HasOne("ManagerApartment.Models.ApartmentType", "ApartmentType")
                        .WithMany("Packages")
                        .HasForeignKey("ApartmentTypeId")
                        .HasConstraintName("FK__Package__Apartme__534D60F1");

                    b.Navigation("ApartmentType");
                });

            modelBuilder.Entity("ManagerApartment.Models.PackageServiceDetail", b =>
                {
                    b.HasOne("ManagerApartment.Models.Package", "Package")
                        .WithMany("PackageServiceDetails")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK__PackageSe__Packa__571DF1D5");

                    b.HasOne("ManagerApartment.Models.Service", "Service")
                        .WithMany("PackageServiceDetails")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__PackageSe__Servi__5629CD9C");

                    b.Navigation("Package");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("ManagerApartment.Models.Request", b =>
                {
                    b.HasOne("ManagerApartment.Models.Apartment", "Apartment")
                        .WithMany("Requests")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK__Request__Apartme__5FB337D6");

                    b.HasOne("ManagerApartment.Models.Package", "Package")
                        .WithMany("Requests")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Request__Packg__61B365L6");

                    b.Navigation("Apartment");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("ManagerApartment.Models.RequestLog", b =>
                {
                    b.HasOne("ManagerApartment.Models.Request", "Request")
                        .WithMany("RequestLogs")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__RequestLo__Reque__628FA481");

                    b.HasOne("ManagerApartment.Models.Staff", "Staff")
                        .WithMany("RequestLogs")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RequestLo__Staff__628FA481");

                    b.Navigation("Request");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ManagerApartment.Models.StaffDetail", b =>
                {
                    b.HasOne("ManagerApartment.Models.Service", "Service")
                        .WithMany("StaffDetails")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__StaffDeta__Servi__5CD6CB2B");

                    b.HasOne("ManagerApartment.Models.Staff", "Staff")
                        .WithMany("StaffDetails")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__StaffDeta__Staff__5BE2A6F2");

                    b.Navigation("Service");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ManagerApartment.Models.Tennant", b =>
                {
                    b.HasOne("ManagerApartment.Models.ContractDetail", "ContractDetail")
                        .WithMany("Tennants")
                        .HasForeignKey("ContractDetailId")
                        .HasConstraintName("FK__Tennant__Contrac__46E78A0C");

                    b.Navigation("ContractDetail");
                });

            modelBuilder.Entity("ManagerApartment.Models.Apartment", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Contracts");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ManagerApartment.Models.ApartmentType", b =>
                {
                    b.Navigation("Apartments");

                    b.Navigation("Packages");
                });

            modelBuilder.Entity("ManagerApartment.Models.AssetHistory", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("ManagerApartment.Models.Building", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("ManagerApartment.Models.ContractDetail", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Tennants");
                });

            modelBuilder.Entity("ManagerApartment.Models.Owner", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("ManagerApartment.Models.Package", b =>
                {
                    b.Navigation("PackageServiceDetails");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ManagerApartment.Models.Request", b =>
                {
                    b.Navigation("AddOns");

                    b.Navigation("Bills");

                    b.Navigation("RequestLogs");
                });

            modelBuilder.Entity("ManagerApartment.Models.Service", b =>
                {
                    b.Navigation("AddOns");

                    b.Navigation("PackageServiceDetails");

                    b.Navigation("StaffDetails");
                });

            modelBuilder.Entity("ManagerApartment.Models.Staff", b =>
                {
                    b.Navigation("RequestLogs");

                    b.Navigation("StaffDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
